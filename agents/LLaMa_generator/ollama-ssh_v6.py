import ollama
import time
import subprocess
import os
import glob
import sys
import signal
import datetime
import traceback

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã ANSI
RESET = "\033[0m"
RED = "\033[91m"
GREEN = "\033[92m"
YELLOW = "\033[93m"
GRAY = "\033[37m"
WHITE = "\033[97m"

# üõ† –ù–ê–°–¢–†–û–ô–ö–ò üõ†
OLLAMA_HOST = "http://10.0.1.31:11434"
MODEL_NAME = None  # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –≤ –º–µ–Ω—é
USER_MESSAGE_FILE = None  # –§–∞–π–ª —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
RESPONSE_FILE = None  # –§–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–æ–≤
START_LINE = 0  # –° –∫–∞–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞—á–∏–Ω–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É
LAST_PROCESSED_LINE = 0  # –ü–æ—Å–ª–µ–¥–Ω—è—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

# –§–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏
SYS_PROMPT_FILE = "02_sys_prompt.txt"
RESPONSE_TEMPLATE_FILE = "03_response_template.txt"

# ====== –û–ë–†–ê–ë–û–¢–ö–ê –í–´–•–û–î–ê –ü–û CTRL+C (–í–û–ó–í–†–ê–¢ –í –ú–ï–ù–Æ) ======
def signal_handler(sig, frame):
    print(f"\n{YELLOW}–°–∫—Ä–∏–ø—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é...{RESET}")
    raise KeyboardInterrupt  # –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ

signal.signal(signal.SIGINT, signal_handler)

# ====== –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø ======
def show_status():
    """–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"""
    print("\n" + "-" * 60)
    print(f"{WHITE}–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞{RESET}")
    print("-" * 60)
    print(f"{WHITE}–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:{RESET}")
    print(f"–ú–æ–¥–µ–ª—å: {GREEN + MODEL_NAME + RESET if MODEL_NAME else RED + '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–ê' + RESET}")
    print(f"–§–∞–π–ª —Å–æ–æ–±—â–µ–Ω–∏–π: {GREEN + USER_MESSAGE_FILE + RESET if USER_MESSAGE_FILE else RED + '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù' + RESET}")
    print(f"–§–∞–π–ª –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–æ–≤: {GREEN + RESPONSE_FILE + RESET if RESPONSE_FILE else RED + '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù' + RESET}")
    print(f"–°—Ç—Ä–æ–∫–∞ –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {GREEN}{START_LINE}{RESET}")
    print(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: {YELLOW}{LAST_PROCESSED_LINE if LAST_PROCESSED_LINE else '–ï–©–Å –ù–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–õ–ò–°–¨'}{RESET}")
    print("-" * 60)

# ====== –§–£–ù–ö–¶–ò–Ø –í–´–ë–û–†–ê –ú–û–î–ï–õ–ò ======
def get_model_list():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Ollama"""
    try:
        client = ollama.Client(host=OLLAMA_HOST)
        models = client.list()["models"]
        return [m["model"] for m in models]
    except Exception as e:
        print(f"{RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π: {e}{RESET}")
        return []

def choose_model():
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏"""
    global MODEL_NAME
    models = get_model_list()

    if not models:
        print(f"{RED}–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π! –í–æ–∑–º–æ–∂–Ω–æ, Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞.{RESET}")
        return

    print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Ollama ===")
    for idx, model in enumerate(models, start=1):
        print(f"{WHITE}{idx}. {model}{RESET}")

    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ").strip()
        try:
            choice_idx = int(choice) - 1
            if 0 <= choice_idx < len(models):
                MODEL_NAME = models[choice_idx]
                print(f"\n{GREEN}–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: {MODEL_NAME}{RESET}")
                return
            else:
                print(f"{YELLOW}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.{RESET}")
        except ValueError:
            print(f"{YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞!{RESET}")

# ====== –§–£–ù–ö–¶–ò–Ø –í–´–ë–û–†–ê –§–ê–ô–õ–û–í ======
def choose_message_file():
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    global USER_MESSAGE_FILE
    message_files = glob.glob("01_user_message*.txt")

    if not message_files:
        print(f"{RED}–§–∞–π–ª —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!{RESET}")
        sys.exit(1)

    print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ–æ–±—â–µ–Ω–∏–π ===")
    for idx, filename in enumerate(message_files, start=1):
        print(f"{WHITE}{idx}. {filename}{RESET}")

    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: ").strip()
        try:
            choice_idx = int(choice) - 1
            if 0 <= choice_idx < len(message_files):
                USER_MESSAGE_FILE = message_files[choice_idx]
                print(f"\n{GREEN}–§–∞–π–ª —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω: {USER_MESSAGE_FILE}{RESET}")
                return
            else:
                print(f"{YELLOW}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.{RESET}")
        except ValueError:
            print(f"{YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞!{RESET}")

def choose_response_file():
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π"""
    global RESPONSE_FILE
    response_files = glob.glob("04_model_response*.txt")

    print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–æ–≤ ===")
    for idx, filename in enumerate(response_files, start=1):
        print(f"{WHITE}{idx}. {filename}{RESET}")

    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏–ª–∏ 'n' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ: ").strip()
    if choice.lower() == 'n' or not response_files:
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        RESPONSE_FILE = f"04_model_response_{timestamp}.txt"
        print(f"{GREEN}–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª: {RESPONSE_FILE}{RESET}")
    else:
        try:
            choice_idx = int(choice) - 1
            if 0 <= choice_idx < len(response_files):
                RESPONSE_FILE = response_files[choice_idx]
                print(f"\n{GREEN}–§–∞–π–ª –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤—ã–±—Ä–∞–Ω: {RESPONSE_FILE}{RESET}")
            else:
                print(f"{YELLOW}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.{RESET}")
                choose_response_file()
        except ValueError:
            print(f"{YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ 'n' –¥–ª—è –Ω–æ–≤–æ–≥–æ!{RESET}")
            choose_response_file()

# ====== –§–£–ù–ö–¶–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò ======
def process_generation():
    """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    global START_LINE, LAST_PROCESSED_LINE

    total_lines = sum(1 for _ in open(USER_MESSAGE_FILE))

    while True:
        start_input = input(f"\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—á–∞—Ç—å –∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –º–µ–Ω—é (1 - {total_lines}, Enter = {START_LINE+1}): ").strip()
        if start_input.lower() == "q":
            print(f"\n{YELLOW}–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é...{RESET}")
            return  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é

        if start_input.isdigit():
            START_LINE = max(0, int(start_input) - 1)
            break  # –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ—Å–ª–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞

    print(f"\n{GREEN}–ó–∞–ø—É—â–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ `{MODEL_NAME}`...{RESET}")

    client = ollama.Client(host=OLLAMA_HOST)

    try:
        for idx, message in enumerate(open(USER_MESSAGE_FILE).readlines()[START_LINE:], start=START_LINE + 1):
            response = client.chat(model=MODEL_NAME, messages=[
                {"role": "system", "content": open(SYS_PROMPT_FILE).read().strip()},
                {"role": "user", "content": message.strip()}
            ])
            model_answer = response["message"]["content"]

            print(f"\n{GREEN}–û—Ç–≤–µ—Ç #{idx}:{RESET}\n{GRAY}{model_answer}{RESET}\n" + "-" * 50)
            LAST_PROCESSED_LINE = idx

    except KeyboardInterrupt:
        print(f"\n{YELLOW}–°–∫—Ä–∏–ø—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é...{RESET}")
        return  # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é

# ====== –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ ======
def main_loop():
    while True:
        show_status()
        action = input("\n1 - –ù–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\n2 - –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å\n3 - –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã\n4 - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Ollama\n5 - –í—ã—Ö–æ–¥\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if action == "1":
            process_generation()
        elif action == "2":
            choose_model()
        elif action == "3":
            choose_message_file()
            choose_response_file()
        elif action == "4":
            subprocess.run(["python", "restart_ollama.py", "--auto"])
        elif action == "5":
            print(f"{GREEN}–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.{RESET}")
            sys.exit(0)

# ====== –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ò–ù–ò–¶–ò–ê–õ–¨–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–• ======
def check_initial_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ.
    –ï—Å–ª–∏ –∫–∞–∫–∞—è-–ª–∏–±–æ –∏–∑ –Ω–∏—Ö –ø—É—Å—Ç–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏—Ö (—Å–Ω–∞—á–∞–ª–∞ –º–æ–¥–µ–ª—å, –∑–∞—Ç–µ–º —Ñ–∞–π–ª—ã),
    –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    global MODEL_NAME, USER_MESSAGE_FILE, RESPONSE_FILE

    if not MODEL_NAME:
        choose_model()
    if not USER_MESSAGE_FILE:
        choose_message_file()
    if not RESPONSE_FILE:
        choose_response_file()
    print(f"\n{GREEN}–ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...{RESET}")

# ====== –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ ======
def main_loop():
    while True:
        show_status()
        action = input("\n1 - –ù–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\n2 - –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å\n3 - –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã\n4 - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Ollama\n5 - –í—ã—Ö–æ–¥\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if action == "1":
            process_generation()
        elif action == "2":
            choose_model()
        elif action == "3":
            choose_message_file()
            choose_response_file()
        elif action == "4":
            subprocess.run(["python", "restart_ollama.py", "--auto"])
        elif action == "5":
            print(f"{GREEN}–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.{RESET}")
            sys.exit(0)

# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–¥–∞–Ω—ã –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏ –µ—Å–ª–∏ –Ω–µ—Ç ‚Äì –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏—Ö
check_initial_variables()

main_loop()
